//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibrary_Recruitment
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RecruitmentDBEntities : DbContext
    {
        public RecruitmentDBEntities()
            : base("name=RecruitmentDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BusinessUnitReqTable> BusinessUnitReqTables { get; set; }
        public virtual DbSet<BusinessUnitTable> BusinessUnitTables { get; set; }
        public virtual DbSet<EmployeeDetail> EmployeeDetails { get; set; }
        public virtual DbSet<LoginCredential> LoginCredentials { get; set; }
    
        public virtual int proc_add_bunit(string bname)
        {
            var bnameParameter = bname != null ?
                new ObjectParameter("bname", bname) :
                new ObjectParameter("bname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_add_bunit", bnameParameter);
        }
    
        public virtual int proc_add_employee(Nullable<int> eid, string ename, Nullable<int> bid, string des, Nullable<bool> status, Nullable<int> exp)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var expParameter = exp.HasValue ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_add_employee", eidParameter, enameParameter, bidParameter, desParameter, statusParameter, expParameter);
        }
    
        public virtual int proc_delete_BReqTable(Nullable<int> rId)
        {
            var rIdParameter = rId.HasValue ?
                new ObjectParameter("RId", rId) :
                new ObjectParameter("RId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_delete_BReqTable", rIdParameter);
        }
    
        public virtual ObjectResult<proc_display_businessreq_Result> proc_display_businessreq()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_display_businessreq_Result>("proc_display_businessreq");
        }
    
        public virtual ObjectResult<proc_display_emp_table_Result> proc_display_emp_table()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_display_emp_table_Result>("proc_display_emp_table");
        }
    
        public virtual int proc_insert_req(ObjectParameter rid, Nullable<int> bid, Nullable<int> jreq, Nullable<int> dreq, Nullable<int> breq)
        {
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            var jreqParameter = jreq.HasValue ?
                new ObjectParameter("jreq", jreq) :
                new ObjectParameter("jreq", typeof(int));
    
            var dreqParameter = dreq.HasValue ?
                new ObjectParameter("dreq", dreq) :
                new ObjectParameter("dreq", typeof(int));
    
            var breqParameter = breq.HasValue ?
                new ObjectParameter("breq", breq) :
                new ObjectParameter("breq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_req", rid, bidParameter, jreqParameter, dreqParameter, breqParameter);
        }
    
        public virtual int proc_update_tables(Nullable<int> rid, Nullable<int> bid, Nullable<int> eid, string etype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var bidParameter = bid.HasValue ?
                new ObjectParameter("bid", bid) :
                new ObjectParameter("bid", typeof(int));
    
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var etypeParameter = etype != null ?
                new ObjectParameter("etype", etype) :
                new ObjectParameter("etype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_update_tables", ridParameter, bidParameter, eidParameter, etypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> proc_login_signin(Nullable<int> eid, string pass, string etype)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var etypeParameter = etype != null ?
                new ObjectParameter("etype", etype) :
                new ObjectParameter("etype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("proc_login_signin", eidParameter, passParameter, etypeParameter);
        }
    
        public virtual int proc_login_signup(Nullable<int> eid, string pass, string etype)
        {
            var eidParameter = eid.HasValue ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var etypeParameter = etype != null ?
                new ObjectParameter("etype", etype) :
                new ObjectParameter("etype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_login_signup", eidParameter, passParameter, etypeParameter);
        }
    
        public virtual ObjectResult<proc_display_requrests_Result> proc_display_requrests(Nullable<int> p_bid)
        {
            var p_bidParameter = p_bid.HasValue ?
                new ObjectParameter("p_bid", p_bid) :
                new ObjectParameter("p_bid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_display_requrests_Result>("proc_display_requrests", p_bidParameter);
        }
    
        public virtual ObjectResult<proc_display_available_employees_Result> proc_display_available_employees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_display_available_employees_Result>("proc_display_available_employees");
        }
    
        public virtual ObjectResult<proc_display_pending_requests_Result> proc_display_pending_requests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_display_pending_requests_Result>("proc_display_pending_requests");
        }
    }
}
